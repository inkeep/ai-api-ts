/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { AssistantMessage, AssistantMessage$ } from "./assistantmessage";
import { z } from "zod";

export type ChatResult = {
    chatSessionId: string;
    message: AssistantMessage;
};

/** @internal */
export namespace ChatResult$ {
    export type Inbound = {
        chat_session_id: string;
        message: AssistantMessage$.Inbound;
    };

    export const inboundSchema: z.ZodType<ChatResult, z.ZodTypeDef, Inbound> = z
        .object({
            chat_session_id: z.string(),
            message: AssistantMessage$.inboundSchema,
        })
        .transform((v) => {
            return {
                chatSessionId: v.chat_session_id,
                message: v.message,
            };
        });

    export type Outbound = {
        chat_session_id: string;
        message: AssistantMessage$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ChatResult> = z
        .object({
            chatSessionId: z.string(),
            message: AssistantMessage$.outboundSchema,
        })
        .transform((v) => {
            return {
                chat_session_id: v.chatSessionId,
                message: v.message,
            };
        });
}
