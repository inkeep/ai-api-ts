/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export enum Four {
    Stop = "stop",
    Length = "length",
    ContentFilter = "content_filter",
}

export type MessageChunk = {
    chatSessionId?: string | null | undefined;
    contentChunk: string;
    finishReason?: any | null | undefined;
};

/** @internal */
export namespace Four$ {
    export const inboundSchema: z.ZodNativeEnum<typeof Four> = z.nativeEnum(Four);
    export const outboundSchema: z.ZodNativeEnum<typeof Four> = inboundSchema;
}

/** @internal */
export namespace MessageChunk$ {
    export const inboundSchema: z.ZodType<MessageChunk, z.ZodTypeDef, unknown> = z
        .object({
            chat_session_id: z.nullable(z.string()).optional(),
            content_chunk: z.string(),
            finish_reason: z.nullable(z.any()).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                chat_session_id: "chatSessionId",
                content_chunk: "contentChunk",
                finish_reason: "finishReason",
            });
        });

    export type Outbound = {
        chat_session_id?: string | null | undefined;
        content_chunk: string;
        finish_reason?: any | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MessageChunk> = z
        .object({
            chatSessionId: z.nullable(z.string()).optional(),
            contentChunk: z.string(),
            finishReason: z.nullable(z.any()).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                chatSessionId: "chat_session_id",
                contentChunk: "content_chunk",
                finishReason: "finish_reason",
            });
        });
}
