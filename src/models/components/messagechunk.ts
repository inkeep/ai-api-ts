/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type MessageChunk = {
    chatSessionId?: string | undefined;
    contentChunk: string;
};

/** @internal */
export namespace MessageChunk$ {
    export type Inbound = {
        chat_session_id?: string | undefined;
        content_chunk: string;
    };

    export const inboundSchema: z.ZodType<MessageChunk, z.ZodTypeDef, Inbound> = z
        .object({
            chat_session_id: z.string().optional(),
            content_chunk: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.chat_session_id === undefined ? null : { chatSessionId: v.chat_session_id }),
                contentChunk: v.content_chunk,
            };
        });

    export type Outbound = {
        chat_session_id?: string | undefined;
        content_chunk: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MessageChunk> = z
        .object({
            chatSessionId: z.string().optional(),
            contentChunk: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.chatSessionId === undefined ? null : { chat_session_id: v.chatSessionId }),
                content_chunk: v.contentChunk,
            };
        });
}
