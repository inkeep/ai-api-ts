/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export enum RecordTypeEnumerated {
    Documentation = "documentation",
    Site = "site",
    DiscoursePost = "discourse_post",
    GithubIssue = "github_issue",
    GithubDiscussion = "github_discussion",
    StackoverflowQuestion = "stackoverflow_question",
    DiscordForumPost = "discord_forum_post",
    DiscordMessage = "discord_message",
    CustomQuestionAnswer = "custom_question_answer",
}

/**
 * The type of record
 */
export type RecordType = RecordTypeEnumerated | string;

/** @internal */
export namespace RecordTypeEnumerated$ {
    export const inboundSchema = z.nativeEnum(RecordTypeEnumerated);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace RecordType$ {
    export const inboundSchema: z.ZodType<RecordType, z.ZodTypeDef, unknown> = z.union([
        RecordTypeEnumerated$.inboundSchema,
        z.string(),
    ]);

    export type Outbound = string | string;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RecordType> = z.union([
        RecordTypeEnumerated$.outboundSchema,
        z.string(),
    ]);
}
